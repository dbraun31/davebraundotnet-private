ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4]) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw()
wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4]) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1)
wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4]) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw()
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], text = prop) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank())
ggplotly(p, tooltip='text')
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], text = prop) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank())
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], aes(text = prop)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank())
ggplotly(p, tooltip='text')
ggplot(aes(x = reorder(question_content, prop), y = paste0('Proportion improved: ', prop)) +
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], aes(text = paste0('Proportion improved: ', prop))) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank())
ggplotly(p, tooltip='text')
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], aes(text = paste0('Proportion improved: ', prop))) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(fill = NA))
ggplotly(p, tooltip='text')
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], aes(text = paste0('Proportion improved: ', round(prop, 3)))) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(fill = NA))
ggplotly(p, tooltip='text')
q()
blogdown::serve_site()
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(plotly)
library(DT)
library(ggpubr)
library(reactable)
library(scales)
knitr::opts_chunk$set(collapse = TRUE, cache=FALSE, out.width="100%")
qual <- paletteer_d('nord::aurora')
sequ <- colorRampPalette(paletteer_d('nord::silver_mine'))(100)
d <- read.csv('post_data/covid_perceptions.csv')
census <- read.csv('post_data/nst-est2019-alldata.csv')
jhu <- read.csv('post_data/JHUCasesData.csv')
coding <- read.csv('post_data/question_coding.csv')
preds <- read.csv('post_data/all_predictions_for_all_questions.csv')
wis <- read.csv('post_data/proportion_improved.csv')
# --- FORMAT DATA --- #
exclude <- c('', 'district of columbia', 'unknown', 'other (please specify)')
colnames(census) <- tolower(colnames(census))
census <- census %>%
select(name, popestimate2019) %>%
rename(state=name) %>%
mutate(state = tolower(state))
d <- d %>%
mutate(id = 1:nrow(.)) %>%
relocate(id, .before = start.date) %>%
select(-respondent.id) %>%
gather(question, response, q1:q44) %>%
filter(question %in% paste0('q', 1:21),
!state %in% exclude) %>%
filter(!is.na(response)) %>%
mutate(question = as.integer(str_replace(question, 'q', '')),
response = as.integer(response))
uspop <- sum(census[census$state %in% unique(d$state),]$popestimate2019)
census <- census %>%
mutate(pop_prop = census$popestimate2019 / uspop) %>%
filter(state %in% unique(d$state))
# Make observed state proportions
N <- length(unique(d$id))
census <- d %>%
group_by(state, id) %>%
summarize(n()) %>%
group_by(state) %>%
summarize(observed = n()) %>%
mutate(obs_prop = observed / N) %>%
inner_join(census)
knitr::include_graphics("masked_crowd.jpg")
qs <- read.csv('post_data/question_coding.csv')
colnames(qs) <- c('drop', 'drop', 'Preface', 'Question')
reactable(
qs[,c('Preface', 'Question')],
searchable = TRUE,
sortable = FALSE,
highlight = TRUE,
pagination = TRUE,
paginationType = "numbers",         # horizontal page numbers (default)
showPageSizeOptions = FALSE,        # hide dropdown
defaultPageSize = 10,
theme = reactableTheme(
backgroundColor = "transparent",  # let it inherit from the page
color = "inherit",
borderColor = "inherit",
highlightColor = "rgba(0, 0, 0, 0.05)",
stripedColor = "rgba(0, 0, 0, 0.02)",
style = list(fontSize = "0.95em"),
pageButtonStyle = list(
background = "transparent",
color = "inherit",
border = "1px solid #ccc",
borderRadius = "4px",
padding = "4px 8px",
margin = "0 2px"
),
pageButtonHoverStyle = list(
background = "#ddd"
),
pageButtonActiveStyle = list(
background = "#bbb",
fontWeight = "bold"
)
)
)
dates <- unique(d$year_month_day)
dates <- dates[order(unique(d$mw))]
dates <- ifelse((seq_along(dates)+3) %% 4 == 0, dates, "")
p1 <- d %>%
group_by(mw, survey_platform) %>%
summarize(year_month_day = unique(year_month_day),
count = length(unique(id))) %>%
mutate(survey_platform = recode(survey_platform, `sm_volunteer` = 'Platform A',
`sm_paid` = 'Platform B', `pollfish` = 'Platform C')) %>%
ggplot(aes(x = reorder(year_month_day, mw), y = count,
color=survey_platform, group=survey_platform,
text=paste0('Date: ', year_month_day, '<br>Number of responses: ', count,
'<br>Survey platform: ', survey_platform))) +
geom_line() +
geom_point() +
labs(
x = 'Date',
y = 'Number of responses',
color = 'Survey platform'
) +
ylim(0, 450) +
scale_x_discrete(labels = dates, breaks = dates) +
scale_color_manual(values = qual[c(1, 4, 5)]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = 'bottom',
text = element_text(size = 16))
pp1 <- ggplotly(p1, tooltip='text')
pp1 %>%
layout(
legend = list(
orientation = "h",  # horizontal legend
x = 0.5,            # centered horizontally
xanchor = "center",
y = -0.5,           # move below the plot area
yanchor = "top"
)
)
p2 <- census %>%
mutate(state_title = str_to_title(state),
expected = pop_prop * N) %>%
relocate(expected, .after = observed) %>%
mutate(diff = abs(observed - expected)) %>%
mutate(outlier = ifelse(diff > quantile(diff, probs = .9), 'yes', 'no')) %>%
mutate(outlier_label = ifelse(outlier == 'yes', state_title, NA)) %>%
ggplot(aes(x = expected, y = observed)) +
geom_abline(slope = 1, intercept = 0, linetype = 'dashed') +
geom_point(aes(color = outlier,
text = paste0('Expected: ', round(expected), '<br>Observed: ', observed,
'<br>State: ', state_title))) +
geom_text(aes(label = outlier_label, text = NULL), nudge_y = 40) +
ylim(0, 1200) +
xlim(0, 1200) +
labs(
x = 'Expected responses',
y = 'Observed responses'
) +
scale_color_manual(values = c(`no` = qual[1], `yes` = qual[3])) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none',
text = element_text(size = 16))
pp2 <- ggplotly(p2, tooltip='text')
pp2
pd1 <- jhu %>%
mutate(inccases_lead1 = lead(inccases),
inccases_lead2 = lead(inccases, n = 2),
inccases_lead3 = lead(inccases, n = 3),
inccases_lead4 = lead(inccases, n = 4)) %>%
select(EW, contains('lead')) %>%
rename(ew = EW) %>%
inner_join(d)
coding <- coding %>%
mutate(question = as.integer(str_replace(question, 'q', ''))) %>%
select(question, question_content)
pd2 <- pd1 %>%
gather(lead, cases, inccases, contains('lead')) %>%
mutate(lead = recode(lead, `inccases` = 0,
`inccases_lead1` = 1,
`inccases_lead2` = 2,
`inccases_lead3` = 3,
`inccases_lead4` = 4)) %>%
inner_join(coding) %>%
group_by(ew, question, lead) %>%
summarize(response = mean(response, na.rm = TRUE),
question_content=unique(question_content),
cases = unique(cases)) %>%
group_by(question_content, lead) %>%
summarize(r = cor.test(response, cases)$estimate,
ci_l = cor.test(response, cases)$conf.int[1],
ci_h = cor.test(response, cases)$conf.int[2],
p = cor.test(response, cases)$p.value) %>%
mutate(p = ifelse(p < .001, 'p < .001', paste0('p = ', round(p, 3)))) %>%
mutate(label = paste0('r = ', round(r, 3), '\n95CI = [', round(ci_l, 3), ', ', round(ci_h, 3), ']\n', p))
pd3 <- pd2 %>%
group_by(question_content) %>%
summarize(avg_r = mean(r)) %>%
inner_join(pd2)
p1 <- pd3 %>%
ggplot(aes(x = lead, y = reorder(question_content, avg_r))) +
geom_tile(aes(fill = r, text = label)) +
scale_fill_gradientn(colors = sequ) +
labs(
x = 'Weeks ahead',
y = 'Survey question',
fill = 'Correlation\ncoefficient'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank())
pp3 <- ggplotly(p1, tooltip='text')
pp3
cases <- jhu[jhu$EW %in% unique(d$ew), c('EW', 'inccases')]
colnames(cases) <- tolower(colnames(cases))
cases$forecast_week <- 1:nrow(cases)
mw <- 1:(length(unique(cases$ew)))
mw_ew <- data.frame(mw = mw, ew = unique(cases$ew))
mw_ew <- inner_join(mw_ew, unique(d[, c('ew', 'year_month_day')]))
preds_ <- preds %>%
inner_join(cases[, c('forecast_week', 'ew')]) %>%
inner_join(mw_ew) %>%
mutate(mw = mw + step)
cases <- inner_join(cases, mw_ew)
n_x <- 5
n_y <- 3
mw <- unique(mw_ew$mw)
x_labs <- mw_ew$year_month_day[seq(1, nrow(mw_ew), by = n_x)]
x_breaks <- mw[seq(1, length(mw), by = n_x)]
y_breaks <- seq(0, round(max(cases$inccases)) + 1000000, length.out = 5)
keep_questions <- c(23, 2, 10, 19, 20, 99)
levels <- coding[coding$question %in% keep_questions,]$question_content
levels <- c('Baseline model', levels, 'Full model')
p <- preds_ %>%
rename(question = QS) %>%
filter(quantile %in% c(0.025, .5, .975), question %in% keep_questions) %>%
left_join(coding) %>%
mutate(question_content = case_when(
question == 99 ~ 'Full model',
question == 23 ~ 'Baseline model',
TRUE ~ question_content
)) %>%
mutate(quantile = recode(quantile, `0.025` = 'ci_l', `0.5` = 'pred', `0.975` = 'ci_h'),
question_content = factor(question_content, levels=levels)) %>%
spread(quantile, value) %>%
ggplot(aes(x = mw, y = pred)) +
geom_line(data = cases, aes(x = mw, y = inccases)) +
geom_line(aes(group = forecast_week), color = qual[4]) +
geom_point(aes(group = forecast_week, text = paste0('Week: ', year_month_day,
'\nCases: ', round(pred),
'\n95% CI Lower: ', round(ci_l),
'\n95% CI Upper: ', round(ci_h))), color = qual[4]) +
geom_ribbon(aes(ymin = ci_l, ymax = ci_h, group = forecast_week), alpha = .4, fill = qual[4]) +
facet_wrap(~question_content) +
scale_x_continuous(labels = x_labs, breaks = x_breaks) +
scale_y_continuous(breaks=y_breaks, labels = scientific) +
labs(
x = '',
y = 'Incident COVID-19 cases'
) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = NA),
panel.spacing.y = unit(1, 'line'))
ggplotly(p, tooltip='text') %>%
layout(margin = list(b = 50),
xaxis = list(title = list(text = 'Epidemic week', standoff = 10)))
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop)) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], aes(text = paste0('Proportion improved: ', round(prop, 3)))) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(fill = NA),
panel.spacing.y = unit(1, 'line'))
ggplotly(p, tooltip='text')
head(wis)
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop),
week_ahead = paste0(week_ahead, ' week(s) ahead')) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], aes(text = paste0('Proportion improved: ', round(prop, 3)))) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved'
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(fill = NA),
panel.spacing.y = unit(1, 'line'))
ggplotly(p, tooltip='text')
p <- wis %>%
mutate(question = questionset_x + 1) %>%
inner_join(coding) %>%
group_by(question_content) %>%
mutate(prop_m = mean(prop),
week_ahead = paste0(week_ahead, ' week(s) ahead')) %>%
ungroup() %>%
filter(prop_m >= quantile(prop_m, probs = .75)) %>%
ggplot(aes(x = reorder(question_content, prop), y = prop)) +
geom_hline(yintercept = .5, linetype = 'dashed') +
geom_point(color = qual[4], aes(text = paste0('Proportion improved: ', round(prop, 3)))) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0, color = qual[4]) +
facet_wrap(~week_ahead) +
coord_flip() +
ylim(0, 1) +
labs(
x = 'Survey question',
y = 'Proportion WIS score improved',
caption = "Improvement is relative to baseline model.\n0.5 indicates the one model wasn't better than the other."
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(fill = NA),
panel.spacing.y = unit(1, 'line'))
ggplotly(p, tooltip='text')
q()
